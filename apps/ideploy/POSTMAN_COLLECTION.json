{
  "info": {
    "name": "IDEM SaaS API",
    "description": "Collection compl√®te pour tester l'API IDEM SaaS",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "api_url",
      "value": "http://localhost:8000/api/v1",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "member_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Token is present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.exist;",
                  "    pm.collectionVariables.set(\"admin_token\", jsonData.token);",
                  "});",
                  "",
                  "pm.test(\"User is admin\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.eql(\"admin\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/login",
              "host": ["{{api_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Member",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Token is present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.exist;",
                  "    pm.collectionVariables.set(\"member_token\", jsonData.token);",
                  "});",
                  "",
                  "pm.test(\"User is member\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.eql(\"member\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"member@test.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/login",
              "host": ["{{api_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Invalid Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 401\", function() {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Error message present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(false);",
                  "    pm.expect(jsonData.message).to.include(\"incorrect\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/auth/login",
              "host": ["{{api_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Access Without Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 401\", function() {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/idem/subscription",
              "host": ["{{api_url}}"],
              "path": ["idem", "subscription"]
            }
          }
        }
      ]
    },
    {
      "name": "2. Client API",
      "item": [
        {
          "name": "Get Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Plan data present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.plan).to.exist;",
                  "    pm.expect(jsonData.data.app_limit).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/subscription",
              "host": ["{{api_url}}"],
              "path": ["idem", "subscription"]
            }
          }
        },
        {
          "name": "Get Available Plans",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Plans array present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    pm.expect(jsonData.data.length).to.be.at.least(4);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/plans",
              "host": ["{{api_url}}"],
              "path": ["idem", "plans"]
            }
          }
        },
        {
          "name": "Get Quota Usage",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Quota data present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.apps).to.exist;",
                  "    pm.expect(jsonData.data.servers).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/quota",
              "host": ["{{api_url}}"],
              "path": ["idem", "quota"]
            }
          }
        },
        {
          "name": "Preflight Check - App",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/preflight/app",
              "host": ["{{api_url}}"],
              "path": ["idem", "preflight", "app"]
            }
          }
        },
        {
          "name": "Preflight Check - Server",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/preflight/server",
              "host": ["{{api_url}}"],
              "path": ["idem", "preflight", "server"]
            }
          }
        },
        {
          "name": "Change Plan to Basic",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Plan changed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.new_plan).to.eql(\"basic\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"plan\": \"basic\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/idem/subscription/change",
              "host": ["{{api_url}}"],
              "path": ["idem", "subscription", "change"]
            }
          }
        },
        {
          "name": "Cancel Subscription",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Subscription cancelled\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/subscription/cancel",
              "host": ["{{api_url}}"],
              "path": ["idem", "subscription", "cancel"]
            }
          }
        },
        {
          "name": "Member Access Admin (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 403\", function() {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "pm.test(\"Access denied message\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.error).to.include(\"Acc√®s refus√©\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{member_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/admin/dashboard",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "dashboard"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Admin API",
      "item": [
        {
          "name": "Admin Dashboard",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Dashboard data present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.users).to.exist;",
                  "    pm.expect(jsonData.data.teams).to.exist;",
                  "    pm.expect(jsonData.data.servers).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/admin/dashboard",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "dashboard"]
            }
          }
        },
        {
          "name": "List Managed Servers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/admin/servers/managed",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "servers", "managed"]
            }
          }
        },
        {
          "name": "List All Teams",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Teams array present\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/admin/teams",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "teams"]
            }
          }
        },
        {
          "name": "Get Team Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{api_url}}/idem/admin/teams/2",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "teams", "2"]
            }
          }
        },
        {
          "name": "Change Team Plan",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"plan\": \"pro\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/idem/admin/teams/2/change-plan",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "teams", "2", "change-plan"]
            }
          }
        },
        {
          "name": "Promote User to Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": 2\n}"
            },
            "url": {
              "raw": "{{api_url}}/idem/admin/users/promote",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "users", "promote"]
            }
          }
        },
        {
          "name": "Demote User to Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": 2\n}"
            },
            "url": {
              "raw": "{{api_url}}/idem/admin/users/demote",
              "host": ["{{api_url}}"],
              "path": ["idem", "admin", "users", "demote"]
            }
          }
        }
      ]
    }
  ]
}
