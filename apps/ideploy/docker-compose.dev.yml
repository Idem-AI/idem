services:
  ideploy:
    image: ideploy:dev
    pull_policy: never
    build:
      context: .
      dockerfile: ./docker/development/Dockerfile
      args:
        - USER_ID=${USERID:-1000}
        - GROUP_ID=${GROUPID:-1000}
    ports:
      - '${APP_PORT:-8000}:8080'
    environment:
      AUTORUN_ENABLED: false
      PUSHER_HOST: '${PUSHER_HOST}'
      PUSHER_PORT: '${PUSHER_PORT}'
      PUSHER_SCHEME: '${PUSHER_SCHEME:-http}'
      PUSHER_APP_ID: '${PUSHER_APP_ID:-ideploy}'
      PUSHER_APP_KEY: '${PUSHER_APP_KEY:-ideploy}'
      PUSHER_APP_SECRET: '${PUSHER_APP_SECRET:-ideploy}'
    volumes:
      - .:/var/www/html/:cached
      - dev_backups_data:/var/www/html/storage/app/backups
  postgres:
    pull_policy: always
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    env_file:
      - .env
    environment:
      POSTGRES_USER: '${DB_USERNAME:-ideploy}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-password}'
      POSTGRES_DB: '${DB_DATABASE:-ideploy}'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
  redis:
    pull_policy: always
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    env_file:
      - .env
    volumes:
      - dev_redis_data:/data
  soketi:
    image: ideploy-realtime:dev
    pull_policy: never
    build:
      context: .
      dockerfile: ./docker/ideploy-realtime/Dockerfile
    env_file:
      - .env
    ports:
      - '${FORWARD_SOKETI_PORT:-6001}:6001'
      - '6002:6002'
    volumes:
      - ./storage:/var/www/html/storage
      - ./docker/ideploy-realtime/terminal-server.js:/terminal/terminal-server.js
    environment:
      SOKETI_DEBUG: 'false'
      SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID:-ideploy}'
      SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY:-ideploy}'
      SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET:-ideploy}'
    entrypoint: ['/bin/sh', '/soketi-entrypoint.sh']
  vite:
    image: node:24-alpine
    pull_policy: always
    container_name: ideploy-vite
    working_dir: /var/www/html
    environment:
      VITE_HOST: '${VITE_HOST:-localhost}'
      VITE_PORT: '${VITE_PORT:-5173}'
    ports:
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    volumes:
      - .:/var/www/html/:cached
    command: sh -c "npm install && npm run dev"
    networks:
      - ideploy
  testing-host:
    image: ideploy-testing-host:dev
    pull_policy: never
    build:
      context: .
      dockerfile: ./docker/testing-host/Dockerfile
    init: true
    container_name: ideploy-testing-host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - dev_ideploy_data:/data/ideploy
      - dev_backups_data:/data/ideploy/backups
      - dev_postgres_data:/data/ideploy/_volumes/database
      - dev_redis_data:/data/ideploy/_volumes/redis
      - dev_minio_data:/data/ideploy/_volumes/minio
    networks:
      - ideploy
  mailpit:
    image: axllent/mailpit:latest
    pull_policy: always
    container_name: ideploy-mail
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - ideploy
  minio:
    image: minio/minio:latest
    pull_policy: always
    container_name: ideploy-minio
    command: server /data --console-address ":9001"
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
      - '${FORWARD_MINIO_PORT_CONSOLE:-9001}:9001'
    environment:
      MINIO_ACCESS_KEY: '${MINIO_ACCESS_KEY:-minioadmin}'
      MINIO_SECRET_KEY: '${MINIO_SECRET_KEY:-minioadmin}'
    volumes:
      - dev_minio_data:/data
    networks:
      - ideploy

volumes:
  dev_backups_data:
  dev_postgres_data:
  dev_redis_data:
  dev_ideploy_data:
  dev_minio_data:

networks:
  ideploy:
    name: ideploy
    external: false
